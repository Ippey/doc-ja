<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 376d3f9c2ef7fcd64d8b8503d552013acefb8b5b Maintainer: mumumu Status: ready -->
<chapter xml:id="language.fibers" xmlns="http://docbook.org/ns/docbook">
 <title>ファイバー</title>

 <simplesect xml:id="language.fibers.overview">
  <title>ファイバーの概要</title>
  <?phpdoc print-version-for="fiber"?>
  <para>
   ファイバー(Fibers) は、完全なスタックを持つ、停止可能な関数です。 
   ファイバー はコールスタック中のどこからでも停止することができますし、
   後に再開されるまで実行を停止したままにできます。 
  </para>
  <para>
   ファイバーは実行スタック全体を停止するので、
   関数を直接呼び出している側は、関数の呼び出し方を変更する必要はありません。
  </para>
  <para>
   実行スタック中のどこからでも、 
   <methodname>Fiber::suspend</methodname>
   を使って実行を停止できます。
   (つまり、<methodname>Fiber::suspend</methodname>
   の呼び出しは、
   深くネストされた関数のコールスタックの中から行っても構いませんし、
   呼び出しが全く存在しなくても構いません)
  </para>
  <para>
   スタックを持たない <classname>Generator</classname> と異なり、
   個々の <classname>Fiber</classname> は自分のコールスタックを持ちます。
   これによって、深くネストされた関数のコールスタックの中からでも
   関数を停止できます。
   停止ポイントを宣言した
   (つまり、<methodname>Fiber::suspend</methodname> を呼び出した)
   関数は、
   &yield; を使った、<classname>Generator</classname>
   のインスタンスを返さなければならない関数と異なり、
   戻り値の型を宣言する必要はありません。
  </para>
  <para>
   ファイバーは任意の関数をコールしている間に停止できます。
   これには、PHP VM の中からコールされた関数も含みます。
   たとえば、<function>array_map</function>
   に渡した関数や、
   &foreach; によってコールされる、<classname>Iterator</classname>
   オブジェクトのメソッドなどです。
  </para>
  <para>
   いったんファイバーが停止されると、
   ファイバーの実行は <methodname>Fiber::resume</methodname>
   に任意の値を渡すか、
   <methodname>Fiber::throw</methodname>
   を使ってファイバーに例外をスローさせることで再開できます。
   再開される時は、<methodname>Fiber::suspend</methodname>
   から値が返されます(または、例外がスローされます)。
  </para>
  <note>
   <simpara>
    PHP 8.4.0 より前では、
    ファイバーをオブジェクトの <link linkend="language.oop5.decon.destructor">デストラクタ</link> 中で切り替えることはできませんでした。
   </simpara>
  </note> 

  <example xml:id="language.fiber.example.basic"><!-- {{{ -->
   <title>ファイバーの基本的な使い方</title>
   <programlisting role="php">
    <![CDATA[
<?php
$fiber = new Fiber(function (): void {
   $value = Fiber::suspend('fiber');
   echo "Value used to resume fiber: ", $value, PHP_EOL;
});

$value = $fiber->start();

echo "Value from fiber suspending: ", $value, PHP_EOL;

$fiber->resume('test');
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
    <![CDATA[
Value from fiber suspending: fiber
Value used to resume fiber: test
]]>
   </screen>
  </example><!-- }}} -->

 </simplesect>

</chapter>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
